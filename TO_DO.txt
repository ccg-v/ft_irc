- Quan un usuari canvia de nick, notificar-ho als canals i a les converses privades
- Quan un usuari surt amb /QUIT, notificar-ho als canals i a les converses privades
- Quan un client envia CTRL + C, notificar-ho als canals i a les converses privades
- Centralitzar-ho a _removeClient()?

- En lloc de tenir _removeClient() i cridar la funció a _receiveRawData(), _pass() i _quit(), com que _quit() no fa res mes que cridar _removeClient() i prou,
  per què no eliminar _removeClient() i cridar _quit() a _receiveRawData() i _pass()?

- Client IRSSI connectat, tornem a enviar '/connect localhost 8080 pass' -> intenta connectar, retorna ERRONEUSNICKNAME i 'connection lost to localserver', però
  realment la connexió continua 

- Protecció contra Ghost Client Attack? (els clients semirregistrats retenen un descriptor i un nick, establir un ´timeout connection´)

- Leaks

- acceptClient() extreu la ip del client i l'emmagatzema amb setClientIp()
	1. Moure aquest fragment a una funció externa
	2. Pot fer aquesta funció de setter?

- Com puc forçar que poll() falli per saber si necessito cridar _removeClients() per fer net abans d'enviar l'excepció?

JOIN: Send RPL_TOPIC (332) to a client when joining the <channel> to inform them of the current topic of the channel.

CANVIS

1. CAPTURA DE senyals
	1.1 El client envia un CTRL + C:
		- El mètode antic era cridar `recv()` a `_receiveRawData()` i comprovar que no retorna un valor <= 0
		- Ara és `poll()` qui detecta la desconnexió (el SO ha tancat el descriptor) i activa la flag POLLHUP (poll hang up) per aquell socket
		- Quan el nostre bucle `startPoll()` detecta un socket on s'ha activat un event i és POLLHUP
			✔ Close the client’s socket.
			✔ l'elimina de `_pollFds`.
			✔ l'elimina de `_clients`.
			✔ Ho notifica als canals dels quals el client n'era membre
		- D'aquesta manera la detecció és més ràpida, no cal cridar `recv()` cada vegada per comprovar si el client està connectat
		- Ja no cal que passem l'index `i` a `_receiveRawData()` per poder-lo actualitzar